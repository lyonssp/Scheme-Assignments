> (length '())
0
> (length '(1 2 3))
3

> (append '() '(a b c))
'(a b c)
> (append '(a b c) '())
'(a b c)
> (append '(d e f) '(a b c))
'(d e f a b c)

> (reverse '(6 5 4 3 2 1))
'(1 2 3 4 5 6)

> (prefix? '() '(a b c d e f))
#t
> (prefix? '(a b c) '(a b c d e f))
#t
> (prefix? '(a b c) '(x a b c d e f))
#f
> (prefix? '(a) '())
#f

> (subsequence? '() '(a b c))
#t
> (subsequence? '(a b c) '())
#f
> (subsequence? '(a b c) '(x a b c d e f))
#t

> (sublist? '() '(a b c d e))
#t
> (sublist? '(a b c) '())
#f
> (sublist? '(a b c) '(x a b c d e))
#t
> (sublist? '(a b c) '(x a b d c e))
#t

> (map reverse '((a b c) (1 2 3)))
'((c b a) (3 2 1))

> (filter odd? '(1 2 3 4 5))
'(1 3 5)
> (filter even? '(1 2 3 4 5))
'(2 4)

> (num-sort '(7 6 5 4 3 2 1))
'(1 2 3 4 5 6 7)
> (num-sort '(8 4 5 5 3 9 1))
'(1 3 4 5 5 8 9)

> (sort '(3 5 2 7 8 2) <)
'(2 2 3 5 7 8)

> (define my-sort (make-sort <=))
> (my-sort '(2 4 3 5 1))
'(1 2 3 4 5)